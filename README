*******************************************************************************
*******************************************************************************
                     reps - v. Jun 2016
*******************************************************************************
Contents of this file:
--- Installation
--- Usage:
------ Parameter file
------ Usage of BC
------ Usage of reps
--- References

*******************************************************************************
Installation:
*******************************************************************************
Just choose among gcc and icc in the Makefile.
After 'make' two executables will be created:

1] BC   -> compute boundary conditions for numerical solution
2] reps -> solves the fluid equations, calls a Boltzmann code to compute
          the z=0 power spectrum and rescales it to the requested output
          redshifts
*******************************************************************************
Usage:
*******************************************************************************
To use this code:
--> prepare a parameter file, modifying one of the examples following the
    instructions below
--> run the code BC (or provide your own boundary conditions)
--> run the code reps
*******************************************************************************
Parameter file:
*******************************************************************************
BC and reps share the same parameter file. Example of parameter files can be
found in the folder EXAMPLES.

Please, in writing/modifying your parameter file consider these points:

1] For cosmologies with massless neutrinos
Neff must be 3.046, while for cosmologies with 1,2 or 3 massive neutrinos
Neff = 2.0328,1.0196,0.00641 respectively (same convention as in class).

2] You are requested to insert the path to a boltzmann code, either camb or
class. BC will call it to generate the necessary boundary conditions for
solving the differential equations. reps will call it to generate the z=0
power spectrum that will then be rescaled.

3] Output redshifts are requested as
output_number  2
z_output 0.0 10.0 50.0 99.0
with no commas.

4] At the moment you cannot choose different redshifts for z_beta_in, z_fc_in,
and z_fn_in and they all must coincide with the last entry of the line
z_output. This limitation will be fixed asap.

The code can be used for different purposes.
FOR SETTING INITIAL CONDITIONS FOR NEWTONIAN SIMULATIONS you need to set

wrong_nu = 1 -> if you are going to provide the simulation with the tabulated
                Hubble function produced by reps.
wrong_nu = 2 -> if you are letting your sim compute H(z) and you sim does not
                include relativistic neutrinos in the computation of the Hubble
                function.
*******************************************************************************
Usage of BC:
*******************************************************************************
./BC params.ini N
N is a number and can be
          0] correct -numeric- from boltzmann code
          1] fcb = Omega_m ^ 0.55
          2] fnu = Omega_m ^ 0.55
          3] fcb and fnu = Omega_m ^ 0.55

FOR SETTING INITIAL CONDITIONS FOR NEWTONIAN SIMULATIONS you need to use 0,
./BC params.ini 0
*******************************************************************************
Usage of reps
*******************************************************************************
./reps params.ini
The rescaled power spectra will be saved in the folder PK_TABS with names
beginning with Pcb_ , Pnu_ and Pm_ .

WARNING ON THE TOTAL MATTER POWER SPECTRUM:
The code uses internally the definition for the neutrino fraction f_nu adopted
in class (f_nu = Omega_nu_nonrel / (Omega_cb + Omega_nu_nonrel)). If you are
comparing results with camb, you can not directly compare the total matter
power spectrum of reps. Instead, you need to combine yourself the CDM+baryon
power spectrum and the neutrino power spectrum (as shown in the paper) using
a neutrino fraction defined as in camb, ie f_nu = Omega_nu/(Omega_cb + Omega_nu)
*******************************************************************************
